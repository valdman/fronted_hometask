{"id":"../node_modules/pjs/build/p.commonjs.js","dependencies":[{"name":"/Users/odmen/Documents/LIGA/front_5/package.json","includedInParent":true,"mtime":1539791182501},{"name":"/Users/odmen/Documents/LIGA/front_5/node_modules/pjs/package.json","includedInParent":true,"mtime":1539791067765}],"generated":{"js":"// pass\nvar P = (function(prototype, ownProperty, undefined) {\n  return function P(_superclass /* = Object */, definition) {\n    // handle the case where no superclass is given\n    if (definition === undefined) {\n      definition = _superclass;\n      _superclass = Object;\n    }\n\n    // C is the class to be returned.\n    //\n    // When called, creates and initializes an instance of C, unless\n    // `this` is already an instance of C, then just initializes `this`;\n    // either way, returns the instance of C that was initialized.\n    //\n    //  TODO: the Chrome inspector shows all created objects as `C`\n    //        rather than `Object`.  Setting the .name property seems to\n    //        have no effect.  Is there a way to override this behavior?\n    function C() {\n      var self = this instanceof C ? this : new Bare;\n      self.init.apply(self, arguments);\n      return self;\n    }\n\n    // C.Bare is a class with a noop constructor.  Its prototype will be\n    // the same as C, so that instances of C.Bare are instances of C.\n    // `new MyClass.Bare` then creates new instances of C without\n    // calling .init().\n    function Bare() {}\n    C.Bare = Bare;\n\n    // Extend the prototype chain: first use Bare to create an\n    // uninitialized instance of the superclass, then set up Bare\n    // to create instances of this class.\n    var _super = Bare[prototype] = _superclass[prototype];\n    var proto = Bare[prototype] = C[prototype] = C.p = new Bare;\n\n    // pre-declaring the iteration variable for the loop below to save\n    // a `var` keyword after minification\n    var key;\n\n    // set the constructor property on the prototype, for convenience\n    proto.constructor = C;\n\n    C.extend = function(def) { return P(C, def); }\n\n    return (C.open = function(def) {\n      if (typeof def === 'function') {\n        // call the defining function with all the arguments you need\n        // extensions captures the return value.\n        def = def.call(C, proto, _super, C, _superclass);\n      }\n\n      // ...and extend it\n      if (typeof def === 'object') {\n        for (key in def) {\n          if (ownProperty.call(def, key)) {\n            proto[key] = def[key];\n          }\n        }\n      }\n\n      // if no init, assume we're inheriting from a non-Pjs class, so\n      // default to using the superclass constructor.\n      if (!('init' in proto)) proto.init = _superclass;\n\n      return C;\n    })(definition);\n  }\n\n  // as a minifier optimization, we've closured in a few helper functions\n  // and the string 'prototype' (C[p] is much shorter than C.prototype)\n})('prototype', ({}).hasOwnProperty);\nexports.P = P;\n","map":{"mappings":[{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/pjs/build/p.commonjs.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"../node_modules/pjs/build/p.commonjs.js":"// pass\nvar P = (function(prototype, ownProperty, undefined) {\n  return function P(_superclass /* = Object */, definition) {\n    // handle the case where no superclass is given\n    if (definition === undefined) {\n      definition = _superclass;\n      _superclass = Object;\n    }\n\n    // C is the class to be returned.\n    //\n    // When called, creates and initializes an instance of C, unless\n    // `this` is already an instance of C, then just initializes `this`;\n    // either way, returns the instance of C that was initialized.\n    //\n    //  TODO: the Chrome inspector shows all created objects as `C`\n    //        rather than `Object`.  Setting the .name property seems to\n    //        have no effect.  Is there a way to override this behavior?\n    function C() {\n      var self = this instanceof C ? this : new Bare;\n      self.init.apply(self, arguments);\n      return self;\n    }\n\n    // C.Bare is a class with a noop constructor.  Its prototype will be\n    // the same as C, so that instances of C.Bare are instances of C.\n    // `new MyClass.Bare` then creates new instances of C without\n    // calling .init().\n    function Bare() {}\n    C.Bare = Bare;\n\n    // Extend the prototype chain: first use Bare to create an\n    // uninitialized instance of the superclass, then set up Bare\n    // to create instances of this class.\n    var _super = Bare[prototype] = _superclass[prototype];\n    var proto = Bare[prototype] = C[prototype] = C.p = new Bare;\n\n    // pre-declaring the iteration variable for the loop below to save\n    // a `var` keyword after minification\n    var key;\n\n    // set the constructor property on the prototype, for convenience\n    proto.constructor = C;\n\n    C.extend = function(def) { return P(C, def); }\n\n    return (C.open = function(def) {\n      if (typeof def === 'function') {\n        // call the defining function with all the arguments you need\n        // extensions captures the return value.\n        def = def.call(C, proto, _super, C, _superclass);\n      }\n\n      // ...and extend it\n      if (typeof def === 'object') {\n        for (key in def) {\n          if (ownProperty.call(def, key)) {\n            proto[key] = def[key];\n          }\n        }\n      }\n\n      // if no init, assume we're inheriting from a non-Pjs class, so\n      // default to using the superclass constructor.\n      if (!('init' in proto)) proto.init = _superclass;\n\n      return C;\n    })(definition);\n  }\n\n  // as a minifier optimization, we've closured in a few helper functions\n  // and the string 'prototype' (C[p] is much shorter than C.prototype)\n})('prototype', ({}).hasOwnProperty);\nexports.P = P;\n"},"lineCount":75}},"hash":"42a1e4e2751010d76d11caee2ac950f3","cacheData":{"env":{}}}